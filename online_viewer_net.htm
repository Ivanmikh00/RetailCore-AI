<!DOCTYPE html>
<html lang="ru">
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>RetailCore AI - Интеллектуальная экосистема для ритейла</title>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<style>
:root {
  --dark-1: #000000;
  --dark-2: #0a0a0a;
  --dark-3: #111111;
  --accent: #6366f1;
  --accent-secondary: #8b5cf6;
  --text: #f5f5f5;
  --text-light: #a1a1a1;
  --border: rgba(255, 255, 255, 0.08);
  --success: #34d399;
  --warning: #f59e0b;
  --error: #ef4444;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', sans-serif;
  background: var(--dark-1);
  color: var(--text);
  line-height: 1.6;
  overflow-x: hidden;
  -webkit-font-smoothing: antialiased;
  background-image:
    radial-gradient(circle at 10% 20%, rgba(99, 102, 241, 0.05) 0%, transparent 20%),
    radial-gradient(circle at 90% 80%, rgba(139, 92, 246, 0.05) 0%, transparent 20%);
}

.container {
  width: 90%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 20px;
}

.text-center { text-align: center; }

h1, h2, h3, h4, h5 {
  font-weight: 600;
  margin-bottom: 1.5rem;
  line-height: 1.25;
  letter-spacing: -0.5px;
  color: var(--text);
}

p {
  margin-bottom: 1.5rem;
  color: var(--text-light);
}

/* Header */
header {
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 1000;
  background: rgba(0, 0, 0, 0.9);
  backdrop-filter: blur(10px);
  padding: 15px 0;
  border-bottom: 1px solid var(--border);
  transition: all 0.4s ease;
}

.header-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
}

.logo {
  display: flex;
  align-items: center;
  gap: 12px;
  font-size: 1.4rem;
  font-weight: 700;
  color: var(--text);
  text-decoration: none;
  letter-spacing: 1px;
}

.logo-icon {
  color: var(--accent);
  font-size: 1.4rem;
}

nav ul {
  display: flex;
  list-style: none;
  gap: 32px;
}

nav a {
  color: var(--text-light);
  text-decoration: none;
  font-weight: 500;
  font-size: 0.95rem;
  position: relative;
  padding: 6px 0;
  transition: color 0.3s ease;
}

nav a:after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 0;
  height: 2px;
  background: linear-gradient(90deg, var(--accent), var(--accent-secondary));
  transition: width 0.3s ease;
}

nav a:hover {
  color: var(--text);
}

nav a:hover:after {
  width: 100%;
}

.menu-toggle {
  display: none;
  font-size: 1.5rem;
  color: var(--text);
  cursor: pointer;
  position: absolute;
  right: 20px;
  top: 50%;
  transform: translateY(-50%);
  transition: color 0.3s ease;
}

.menu-toggle:hover {
  color: var(--accent);
}

/* Hero */
.hero {
  min-height: 100vh;
  display: flex;
  align-items: center;
  padding-top: 100px;
  padding-bottom: 80px;
  position: relative;
  overflow: hidden;
}

#neuralNetwork {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  pointer-events: auto;
  opacity: 0.5;
}

.hero-content {
  max-width: 680px;
  margin: 0 auto;
  text-align: center;
  position: relative;
  z-index: 2;
}

/* Анимация текста (исходная) */
.hero-text-animated {
  position: relative;
  display: inline-block;
  opacity: 0;
  animation: textDigital 0.6s ease-in-out forwards;
  animation-play-state: paused;
}

.hero-text-animated:nth-child(1) { animation-delay: 0.2s; }
.hero-text-animated:nth-child(2) { animation-delay: 0.2s; }
.hero-text-animated:nth-child(3) { animation-delay: 0.2s; }

@keyframes textDigital {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.hero-text-animated.animated {
  animation: textDigital 1s ease-in-out forwards, textFlicker 0s infinite;
}

/* Новая анимация сдвига влево */
.hero-text-animated.shift-left {
  animation: textDigital 1s ease-in-out forwards,
             shiftLeft 1s ease-in-out 3s forwards;
}

@keyframes shiftLeft {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-350px);
  }
}

.hero-text-animated::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(10deg, transparent, rgba(99, 102, 241, 0.3), transparent);
  opacity: 0;
  pointer-events: none;
}

@keyframes textFlicker {
  0%, 100% { opacity: .0; }
  50% { opacity: 0; }
}

.hero h1 {
  font-size: clamp(2rem, 5vw, 3.5rem);
  margin-bottom: 1.5rem;
  font-weight: 700;
  letter-spacing: -1px;
  line-height: 1.15;
  background: linear-gradient(135deg, var(--text), var(--accent));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.hero h1 span {
  color: var(--text);
  font-weight: 300;
  background: none;
  -webkit-text-fill-color: var(--text);
}

.hero-subtitle {
  font-size: clamp(1.1rem, 2.5vw, 1.4rem);
  margin-bottom: 2rem;
  color: var(--text-light);
  max-width: 600px;
  line-height: 1.7;
  margin: 0 auto 2rem;
}

.hero p {
  font-size: clamp(1rem, 2vw, 1.1rem);
  color: var(--text-light);
  max-width: 600px;
  line-height: 1.8;
  margin: 0 auto 2.5rem;
}

/* Chat Animation */
.chat-animation {
  position: absolute;
  right: 350px;
  top: 50%;
  transform: translateY(-50%);
  width: 450px;
  height: 500px;
  background-color: #f8f9fa;
  border-radius: 10px;
  box-shadow: 0 5px 30px rgba(0, 0, 0, 0.3);
  overflow: hidden;
  opacity: 0;
  transform: translateY(-50%) translateX(100px);
  transition: all 1s ease-in-out 3s;
  z-index: 10;
}

.chat-animation.show {
  opacity: 1;
  transform: translateY(-50%) translateX(0);
}

.chat-header {
  background: linear-gradient(135deg, var(--accent), var(--accent-secondary));
  color: white;
  padding: 15px 20px;
  display: flex;
  align-items: center;
}

.chat-header h2 {
  font-weight: 600;
  font-size: 1.2rem;
}

.chat-header .status {
  margin-left: auto;
  font-size: 12px;
  display: flex;
  align-items: center;
}

.status-dot {
  width: 8px;
  height: 8px;
  background-color: var(--success);
  border-radius: 50%;
  margin-right: 6px;
}

.chat-messages {
  height: 400px;
  padding: 15px;
  overflow-y: hidden;
  background-color: #f8f9fa;
  scrollbar-width: none;
}

.message {
  margin-bottom: 10px;
  max-width: 80%;
  padding: 10px 12px;
  border-radius: 15px;
  line-height: 1.4;
  position: relative;
  font-size: 0.9rem;
  animation: fadeIn 0.3s ease-out;
}

.user-message {
  background-color: var(--accent);
  color: white;
  margin-left: auto;
  border-bottom-right-radius: 5px;
}

.ai-message {
  background-color: #ffffff;
  color: #333333;
  margin-right: auto;
  border-bottom-left-radius: 5px;
  border: 1px solid rgba(0, 0, 0, 0.08);
}

.typing-indicator {
  display: flex;
  padding: 8px 12px;
  background-color: #ffffff;
  border-radius: 15px;
  width: fit-content;
  margin-bottom: 10px;
  border-bottom-left-radius: 5px;
  border: 1px solid rgba(0, 0, 0, 0.08);
}

.typing-dot {
  width: 6px;
  height: 6px;
  background-color: #666666;
  border-radius: 50%;
  margin: 0 2px;
  animation: typingAnimation 1.4s infinite ease-in-out;
}

.typing-dot:nth-child(1) {
  animation-delay: 0s;
}

.typing-dot:nth-child(2) {
  animation-delay: 0.2s;
}

.typing-dot:nth-child(3) {
  animation-delay: 0.4s;
}

.timestamp {
  font-size: 10px;
  color: #999999;
  margin-top: 3px;
  text-align: right;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes typingAnimation {
  0%, 60%, 100% {
    transform: translateY(0);
  }
  30% {
    transform: translateY(-3px);
  }
}

/* Sections */
section {
  padding: 100px 0;
}

.section-header {
  margin-bottom: 70px;
  max-width: 800px;
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  animation: fadeInUp 1s ease-out;
}

.section-title {
  font-size: clamp(1.8rem, 4vw, 2.8rem);
  margin-bottom: 1.5rem;
  font-weight: 700;
  letter-spacing: -1px;
  line-height: 1.2;
}

.section-subtitle {
  font-size: clamp(1rem, 2vw, 1.1rem);
  color: var(--text-light);
  line-height: 1.8;
  max-width: 700px;
  margin: 0 auto;
}

/* About - 2x2 grid */
.about-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 25px;
  max-width: 800px;
  margin: 50px auto 0;
}

.about-item {
  background: var(--dark-2);
  border-radius: 12px;
  padding: 40px 30px;
  transition: all 0.4s ease;
  border: 1px solid var(--border);
  text-align: center;
  animation: fadeInUp 1s ease-out;
  animation-fill-mode: both;
}

.about-item:nth-child(1) { animation-delay: 0.1s; }
.about-item:nth-child(2) { animation-delay: 0.2s; }
.about-item:nth-child(3) { animation-delay: 0.3s; }
.about-item:nth-child(4) { animation-delay: 0.4s; }

.about-item:hover {
  transform: translateY(-5px);
  border-color: var(--accent);
  box-shadow: 0 10px 30px rgba(99, 102, 241, 0.1);
}

.about-item i {
  font-size: 2.2rem;
  margin-bottom: 20px;
  transition: transform 0.3s ease;
}

.about-item:nth-child(1) i { color: var(--accent); }
.about-item:nth-child(2) i { color: var(--success); }
.about-item:nth-child(3) i { color: var(--warning); }
.about-item:nth-child(4) i { color: var(--accent-secondary); }

.about-item:hover i {
  transform: scale(1.1);
}

.about-item h4 {
  font-size: 1.2rem;
  margin-bottom: 10px;
  color: var(--text);
  font-weight: 600;
}

.about-item p {
  font-size: 0.95rem;
  color: var(--text-light);
  margin-bottom: 0;
  line-height: 1.6;
}

/* Features */
.features {
  background: var(--dark-2);
  position: relative;
  overflow: hidden;
  margin: 0;
}

.features-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 30px;
  max-width: 1000px;
  margin: 0 auto;
}

.feature-card {
  background: var(--dark-3);
  border-radius: 12px;
  padding: 40px 30px;
  transition: all 0.4s ease, max-height 0.5s ease-in-out 0.1s;
  border: 1px solid var(--border);
  text-align: center;
  animation: fadeInUp 1s ease-out;
  animation-fill-mode: both;
  cursor: pointer;
  position: relative;
  overflow: hidden;
}

.feature-card:hover {
  transform: translateY(-8px);
  border-color: var(--accent);
  box-shadow: 0 15px 40px rgba(99, 102, 241, 0.15);
}

.feature-card:nth-child(1) { animation-delay: 0.1s; }
.feature-card:nth-child(2) { animation-delay: 0.2s; }
.feature-card:nth-child(3) { animation-delay: 0.3s; }
.feature-card:nth-child(4) { animation-delay: 0.4s; }
.feature-card:nth-child(5) { animation-delay: 0.5s; }
.feature-card:nth-child(6) { animation-delay: 0.6s; }
.feature-card:nth-child(7) { animation-delay: 0.7s; }
.feature-card:nth-child(8) { animation-delay: 0.8s; }

.feature-icon {
  font-size: 2.2rem;
  margin-bottom: 25px;
  transition: transform 0.3s ease;
}

.feature-card:nth-child(1) .feature-icon { color: var(--accent); }
.feature-card:nth-child(2) .feature-icon { color: var(--success); }
.feature-card:nth-child(3) .feature-icon { color: var(--warning); }
.feature-card:nth-child(4) .feature-icon { color: var(--accent-secondary); }
.feature-card:nth-child(5) .feature-icon { color: var(--accent); }
.feature-card:nth-child(6) .feature-icon { color: var(--success); }
.feature-card:nth-child(7) .feature-icon { color: var(--warning); }
.feature-card:nth-child(8) .feature-icon { color: var(--accent-secondary); }

.feature-card:hover .feature-icon {
  transform: scale(1.1);
}

.feature-card h3 {
  font-size: 1.3rem;
  margin-bottom: 15px;
  color: var(--text);
  font-weight: 600;
}

.feature-card .feature-short {
  font-size: 1rem;
  color: var(--text-light);
  margin-bottom: 20px;
  line-height: 1.7;
}

.feature-details {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.5s ease-in-out;
  font-size: 0.95rem;
  color: var(--text-light);
  line-height: 1.6;
  margin-bottom: 20px;
}

.feature-card:hover .feature-details {
  max-height: 200px;
}

/* Для мобильных устройств оставим поведение по клику */
@media (max-width: 768px) {
  .feature-card.active .feature-details {
    max-height: 300px;
  }
 
  .feature-card:hover .feature-details {
    max-height: 0;
  }
}

.feature-badge {
  display: inline-block;
  padding: 8px 16px;
  border-radius: 20px;
  font-size: 0.8rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-top: 15px;
  transition: all 0.3s ease;
}

.badge-current {
  background: rgba(52, 211, 153, 0.1);
  color: var(--success);
  border: 1px solid var(--success);
}

.badge-dev {
  background: rgba(139, 92, 246, 0.1);
  color: var(--accent-secondary);
  border: 1px solid var(--accent-secondary);
}

/* Technology - 3x2 grid */
.tech-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 30px;
  max-width: 1000px;
  margin: 50px auto 0;
}

.tech-item {
  background: var(--dark-2);
  border-radius: 12px;
  padding: 40px 30px;
  text-align: center;
  transition: all 0.4s ease;
  border: 1px solid var(--border);
  animation: fadeInUp 1s ease-out;
  animation-fill-mode: both;
}

.tech-item:nth-child(1) { animation-delay: 0.1s; }
.tech-item:nth-child(2) { animation-delay: 0.2s; }
.tech-item:nth-child(3) { animation-delay: 0.3s; }
.tech-item:nth-child(4) { animation-delay: 0.4s; }
.tech-item:nth-child(5) { animation-delay: 0.5s; }
.tech-item:nth-child(6) { animation-delay: 0.6s; }

.tech-item:hover {
  transform: translateY(-5px);
  border-color: var(--accent);
  box-shadow: 0 10px 30px rgba(99, 102, 241, 0.15);
}

.tech-icon {
  font-size: 3rem;
  margin-bottom: 20px;
  transition: transform 0.3s ease;
}

.tech-item:nth-child(1) .tech-icon { color: var(--accent); }
.tech-item:nth-child(2) .tech-icon { color: var(--success); }
.tech-item:nth-child(3) .tech-icon { color: var(--warning); }
.tech-item:nth-child(4) .tech-icon { color: var(--accent-secondary); }
.tech-item:nth-child(5) .tech-icon { color: var(--accent); }
.tech-item:nth-child(6) .tech-icon { color: var(--success); }

.tech-item:hover .tech-icon {
  transform: scale(1.1);
}

.tech-name {
  font-size: 1.1rem;
  color: var(--text);
  font-weight: 600;
  margin-bottom: 10px;
}

.tech-desc {
  font-size: 0.9rem;
  color: var(--text-light);
}

/* Footer */
footer {
  background: var(--dark-3);
  padding: 70px 0 30px;
  border-top: 1px solid var(--border);
}

.footer-content {
  display: grid;
  grid-template-columns: 1fr;
  gap: 40px;
  margin-bottom: 50px;
  text-align: center;
}

.footer-column h4 {
  font-size: 1.2rem;
  margin-bottom: 25px;
  color: var(--text);
  font-weight: 600;
  letter-spacing: 0.5px;
}

.footer-about p {
  font-size: 0.95rem;
  color: var(--text-light);
  margin-bottom: 25px;
  line-height: 1.7;
  max-width: 600px;
  margin: 0 auto;
}

.footer-links {
  list-style: none;
  padding: 0;
  display: flex;
  justify-content: center;
  gap: 30px;
  flex-wrap: wrap;
}

.footer-links a {
  color: var(--text-light);
  text-decoration: none;
  transition: color 0.3s ease;
  font-size: 0.95rem;
}

.footer-links a:hover {
  color: var(--accent);
}

.copyright {
  text-align: center;
  padding-top: 30px;
  border-top: 1px solid var(--border);
  color: var(--text-light);
  font-size: 0.85rem;
}

/* Responsive */
@media (max-width: 1200px) {
  .chat-animation {
    width: 300px;
    height: 450px;
    right: 20px;
  }
}

@media (max-width: 992px) {
  .chat-animation {
    display: none;
  }
}

@media (max-width: 768px) {
  .menu-toggle {
    display: block;
  }

  nav ul {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background: rgba(0, 0, 0, 0.95);
    flex-direction: column;
    padding: 20px;
    gap: 40px;
    justify-content: center;
    z-index: 1000;
    height: auto;
    max-height: 50vh;
    transition: transform 0.3s ease;
    transform: translateY(-100%);
  }

  nav ul.active {
    display: flex;
    transform: translateY(0);
  }

  nav ul li {
    width: 100%;
    text-align: center;
    padding: 10px 0;
  }

  .close-menu {
    position: fixed;
    top: 15px;
    right: 15px;
    font-size: 1.5rem;
    color: var(--text);
    cursor: pointer;
    z-index: 1001;
    padding: 10px;
  }

  .about-grid,
  .features-grid {
    grid-template-columns: 1fr;
  }

  .tech-container {
    grid-template-columns: 1fr;
  }
}

@media (min-width: 769px) and (max-width: 1024px) {
  .tech-container {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (min-width: 769px) {
  .close-menu {
    display: none;
  }
}

/* Общая анимация появления */
@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Preloader Styles */
.preloader {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: var(--dark-1);
  z-index: 9999;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  backdrop-filter: blur(5px);
}

.preloader-content {
  text-align: center;
  max-width: 400px;
  padding: 30px;
  position: relative;
}

.preloader-logo {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 12px;
  font-size: 1.8rem;
  font-weight: 700;
  color: var(--text);
  margin-bottom: 40px;
  letter-spacing: 1px;
}

.preloader-logo .logo-icon {
  color: var(--accent);
  font-size: 1.8rem;
}

.preloader-progress {
  width: 100%;
  height: 4px;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 2px;
  margin-bottom: 30px;
  overflow: hidden;
}

.progress-bar {
  height: 100%;
  width: 0;
  background: linear-gradient(90deg, var(--accent), var(--accent-secondary));
  border-radius: 2px;
  transition: width 0.3s ease;
}

.preloader-status {
  color: var(--text-light);
  font-size: 0.9rem;
  margin-bottom: 40px;
  opacity: 0.8;
}

/* Neural Activity Styles */
.neural-activity {
  display: flex;
  justify-content: center;
  gap: 20px;
  height: 40px;
  align-items: center;
  margin-top: 30px;
}

.neuron {
  width: 8px;
  height: 8px;
  background: radial-gradient(circle at center,
            var(--accent) 0%,
            var(--accent-secondary) 80%,
            transparent 100%);
  border-radius: 40%;
  position: relative;
  animation: neuronPulse 2s infinite ease-in-out;
  box-shadow: 0 0 10px rgba(99, 102, 241, 0.5);
}

.neuron::before {
  content: '';
  position: absolute;
  top: -10px;
  left: -10px;
  right: -10px;
  bottom: -10px;
  border-radius: 50%;
  background: radial-gradient(circle at center,
            rgba(99, 102, 241, 0.3) 0%,
            transparent 60%);
  opacity: 0;
  animation: neuronGlow 2s infinite ease-in-out;
}

.neural-activity::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(90deg,
            transparent 5%,
            rgba(99, 102, 241, 0.3) 20%,
            rgba(99, 102, 241, 0.6) 50%,
            rgba(99, 102, 241, 0.3) 80%,
            transparent 95%);
  transform: translateY(-50%);
  z-index: -1;
}

@keyframes neuronPulse {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 15px rgba(99, 102, 241, 0.5);
  }
  50% {
    transform: scale(1.5);
    box-shadow: 0 0 30px rgba(99, 102, 241, 0.8);
  }
}

@keyframes neuronGlow {
  0%, 100% {
    opacity: 0;
    transform: scale(1);
  }
  50% {
    opacity: 0.7;
    transform: scale(1.3);
  }
}

.neuron:nth-child(1) { animation-delay: 0s; }
.neuron:nth-child(2) { animation-delay: 0.2s; }
.neuron:nth-child(3) { animation-delay: 0.4s; }
.neuron:nth-child(4) { animation-delay: 0.6s; }
.neuron:nth-child(5) { animation-delay: 0.8s; }

body.loaded .preloader {
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.5s ease, visibility 0.5s ease;
}

/* Страница "Подробнее" */
.details-page {
  min-height: 100vh;
  padding: 150px 0 80px;
  background: var(--dark-1);
}

.details-container {
  max-width: 1000px;
  margin: 0 auto;
  padding: 0 20px;
}

.details-header {
  margin-bottom: 50px;
  text-align: center;
}

.details-title {
  font-size: clamp(2rem, 5vw, 3rem);
  margin-bottom: 1.5rem;
  font-weight: 700;
  letter-spacing: -1px;
  line-height: 1.2;
  background: linear-gradient(135deg, var(--text), var(--accent));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.details-subtitle {
  font-size: clamp(1.1rem, 2.5vw, 1.4rem);
  color: var(--text-light);
  max-width: 800px;
  margin: 0 auto;
  line-height: 1.7;
}

.details-content {
  display: grid;
  grid-template-columns: 1fr;
  gap: 40px;
}

.details-section {
  background: var(--dark-2);
  border-radius: 12px;
  padding: 40px;
  border: 1px solid var(--border);
}

.details-section h3 {
  font-size: 1.5rem;
  margin-bottom: 20px;
  color: var(--accent);
}

.details-section p {
  margin-bottom: 20px;
  line-height: 1.8;
}

.details-features {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 20px;
  margin-top: 30px;
}

.details-feature {
  display: flex;
  align-items: flex-start;
  gap: 15px;
}

.details-feature i {
  color: var(--accent);
  font-size: 1.2rem;
  margin-top: 3px;
}

.details-feature h4 {
  font-size: 1.1rem;
  margin-bottom: 8px;
}

.details-feature p {
  font-size: 0.95rem;
  color: var(--text-light);
  margin-bottom: 0;
}

@media (max-width: 768px) {
  .details-features {
    grid-template-columns: 1fr;
  }
 
  .details-section {
    padding: 30px 20px;
  }
}
@media (max-width: 768px) {
  .details-section {
    transition: opacity 0.4s ease-out, transform 0.4s ease-out;
  }
 
  .details-feature {
    transition: opacity 0.3s ease-out, transform 0.3s ease-out;
  }
}
/* Добавьте это в ваш раздел стилей */
.details-section {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
}

.details-section.visible {
  opacity: 1;
  transform: translateY(0);
}

.details-feature {
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 0.4s ease-out, transform 0.4s ease-out;
}

.details-feature.visible {
  opacity: 1;
  transform: translateY(0);
}

</style>
</head>
<body>
<!-- Preloader -->
<div class="preloader" id="preloader">
  <div class="preloader-content">
    <div class="preloader-logo">
      <i class="fas fa-brain logo-icon"></i>
      <span>RetailCore AI</span>
    </div>
    <div class="preloader-progress">
      <div class="progress-bar"></div>
    </div>
    <div class="preloader-status">Загрузка системы...</div>
    <div class="neural-activity">
      <div class="neuron"></div>
      <div class="neuron"></div>
      <div class="neuron"></div>
      <div class="neuron"></div>
      <div class="neuron"></div>
    </div>
  </div>
</div>

<!-- Главная страница (по умолчанию) -->
<div id="main-page">
  <!-- Header -->
  <header>
    <div class="container header-container">
      <a href="#" class="logo">
        <i class="fas fa-brain logo-icon"></i>
        <span>RetailCore AI</span>
      </a>
      <div class="menu-toggle" id="menuToggle">
        <i class="fas fa-bars"></i>
      </div>
      <nav>
        <ul id="navMenu">
          <span class="close-menu" id="closeMenu"><i class="fas fa-times"></i></span>
          <li><a href="#about">О системе</a></li>
          <li><a href="#features">Функции</a></li>
          <li><a href="#technology">Технологии</a></li>
          <li><a href="#" id="detailsLink">Подробнее</a></li>
        </ul>
      </nav>
    </div>
  </header>

  <!-- Hero Section с нейронной анимацией -->
  <section class="hero">
    <canvas id="neuralNetwork"></canvas>
    <div class="container">
      <div class="hero-content">
        <h1 class="hero-text-animated">Интеллектуальная экосистема <span>для современного ритейла</span></h1>
        <div class="hero-subtitle hero-text-animated">AI-решение нового поколения для персональных консультантов и управляющих</div>
        <p class="hero-text-animated">Повышайте эффективность работы, увеличивайте продажи и создавайте уникальный клиентский опыт с помощью искусственного интеллекта, созданного специально для ритейла.</p>
      </div>
    </div>

    <!-- Chat Animation -->
    <div class="chat-animation" id="chatAnimation">
      <div class="chat-header">
        <h2>RetailCore AI</h2>
        <div class="status">
          <span class="status-dot"></span>
          <span>онлайн</span>
        </div>
      </div>
      <div class="chat-messages" id="chat-messages">
        <!-- Сообщения будут добавляться здесь -->
      </div>
    </div>
  </section>

  <!-- About Section -->
  <section id="about">
    <div class="container">
      <div class="section-header">
        <h2 class="section-title">Инновационное решение для ритейла</h2>
        <p class="section-subtitle">RetailCore AI — это уникальная система, разработанная для повышения эффективности работы персональных консультантов и управляющих в ритейле.</p>
      </div>
      <div class="about-grid">
        <div class="about-item">
          <i class="fas fa-brain"></i>
          <h4>Искусственный Интеллект</h4>
          <p>Передовые алгоритмы машинного обучения и анализа данных</p>
        </div>
        <div class="about-item">
          <i class="fas fa-lock"></i>
          <h4>Безопасность данных</h4>
          <p>Защита данных клиентов и бизнес-процессов компании</p>
        </div>
        <div class="about-item">
          <i class="fas fa-expand"></i>
          <h4>Масштабируемость</h4>
          <p>Гибкая архитектура для роста и развития бизнеса</p>
        </div>
        <div class="about-item">
          <i class="fas fa-lightbulb"></i>
          <h4>Инновации</h4>
          <p>Уникальные решения для повышения эффективности</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Features Section -->
  <section id="features" class="features">
    <div class="container">
      <div class="section-header">
        <h2 class="section-title">Функциональные возможности</h2>
        <p class="section-subtitle">Система предоставляет комплекс инструментов для повышения эффективности работы на всех уровнях. Подберите модули под Ваши задачи</p>
      </div>
      <div class="features-grid">
        <div class="feature-card" data-feature-id="1">
          <div class="feature-icon"><i class="fas fa-comment-dots"></i></div>
          <h3>Персонализированные коммуникации</h3>
          <p class="feature-short">Генерация индивидуальных рассылок для каждого клиента: приглашения, поздравления, предложения товаров.</p>
          <div class="feature-details">
            <p>Создание индивидуальных сообщений на основе данных о клиенте: предпочтений, истории покупок, интересов и поведенческих данных. Автоматическая генерация персонализированных сообщений, приглашений или поздравлений, а также напоминанй о сервисном обслуживании. Интеграция с CRM для максимальной эффективности.</p>
          </div>
        </div>
        <div class="feature-card" data-feature-id="2">
          <div class="feature-icon"><i class="fas fa-filter"></i></div>
          <h3>Фильтрация клиентов</h3>
          <p class="feature-short">Интеллектуальный подбор клиентов по заданным критериям и подготовка контактов для коммуникаций.</p>
          <div class="feature-details">
            <p>Интеллектуальная сегментация клиентской базы по истории покупок, предпочтениям и активности. Создание динамических списков для целевых кампаний. Автоматизация экспорта контактов в удобные форматы.</p>
          </div>
        </div>
        <div class="feature-card" data-feature-id="3">
          <div class="feature-icon"><i class="fas fa-tasks"></i></div>
          <h3>Управление задачами</h3>
          <p class="feature-short">Ежедневное формирование актуальных задач на основе истории покупок и поведенческой аналитики.</p>
          <div class="feature-details">
            <p>Автоматическое создание ежедневных задач для сотрудников на основе анализа данных клиентов и приоритетов магазина. Интеграция с календарями и системами управления задачами. Уведомления о срочных задачах и отслеживание выполнения.</p>
          </div>
        </div>
        <div class="feature-card" data-feature-id="4">
          <div class="feature-icon"><i class="fas fa-chart-line"></i></div>
          <h3>Анализ эффективности</h3>
          <p class="feature-short">Расчет личной эффективности сотрудников и показателей магазинов, прогнозирование продаж.</p>
          <div class="feature-details">
            <p>Детализированная аналитика производительности: KPI, конверсия, средний чек, прогнозирование продаж с использованием SARIMA-моделей. Подготовка аналитики продаж для максимальной эффективности сотрудников.</p>
          </div>
        </div>
        <div class="feature-card" data-feature-id="5">
          <div class="feature-icon"><i class="fas fa-box"></i></div>
          <h3>Управление ассортиментом</h3>
          <p class="feature-short">Оптимизация мерчандайзинга, логика расширения продаж, поиск комбинаций товаров.</p>
          <div class="feature-details">
            <p>Оптимизация размещения товаров на основе данных о продажах и поведении покупателей. Рекомендации по комбинациям товаров для кросс-продаж. Автоматизированный анализ складских запасов и прогнозирование спроса.</p>
          </div>
        </div>
        <div class="feature-card" data-feature-id="6">
          <div class="feature-icon"><i class="fas fa-search-location"></i></div>
          <h3>Поиск товаров</h3>
          <p class="feature-short">Быстрый поиск товаров в других магазинах с информацией о доступности.</p>
          <div class="feature-details">
            <p>Быстрый поиск товаров по всем магазинам сети с учетом наличия, отдаленности и времени доставки. Интеграция с системами складского учета для актуальной информации.</p>
          </div>
        </div>
        <div class="feature-card" data-feature-id="7">
          <div class="feature-icon"><i class="fas fa-chart-pie"></i></div>
          <h3>Аналитика товарооборачиваемости</h3>
          <p class="feature-short">Анализ товарооборачиваемости, прогнозирование остатков, рекомендации по пополнению стока.</p>
          <div class="feature-details">
            <p>Анализ скорости продаж и товарооборачиваемости для оптимизации складских запасов. Прогнозирование товарных остатков с учетом сезонности и спроса. Автоматическая подборка товаров для пополнения стока на основе данных о продажах и трендов.</p>
          </div>
        </div>
        <div class="feature-card" data-feature-id="8">
          <div class="feature-icon"><i class="fas fa-balance-scale"></i></div>
          <h3>Анализ конкурентов</h3>
          <p class="feature-short">Быстрое сравнение товаров конкурентов по критериям и характеристикам.</p>
          <div class="feature-details">
            <p>Автоматизированный сбор и анализ данных о товарах конкурентов. Сравнение по ценам, характеристикам и отзывам для быстрого предоставления клиентам точной информации. Поддержка принятия решений для повышения конкурентоспособности.</p>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Technology Section -->
  <section id="technology">
    <div class="container">
      <div class="section-header">
        <h2 class="section-title">Технологическая основа</h2>
        <p class="section-subtitle">Система построена на передовых технологиях искусственного интеллекта с использованием многоагентной архитектуры для обеспечения максимальной эффективности и точности.</p>
      </div>
      <div class="tech-container">
        <div class="tech-item">
          <div class="tech-icon"><i class="fas fa-network-wired"></i></div>
          <div class="tech-name">Многоагентная архитектура</div>
          <div class="tech-desc">Система специализированных ИИ-агентов</div>
        </div>
        <div class="tech-item">
          <div class="tech-icon"><i class="fas fa-chart-line"></i></div>
          <div class="tech-name">SARIMA модели</div>
          <div class="tech-desc">Прогнозирование временных рядов</div>
        </div>
        <div class="tech-item">
          <div class="tech-icon"><i class="fas fa-database"></i></div>
          <div class="tech-name">Структурированные БД</div>
          <div class="tech-desc">Оптимизированные для обработки ИИ</div>
        </div>
        <div class="tech-item">
          <div class="tech-icon"><i class="fas fa-robot"></i></div>
          <div class="tech-name">Передовые ИИ-модели</div>
          <div class="tech-desc">Современные языковые модели</div>
        </div>
        <div class="tech-item">
          <div class="tech-icon"><i class="fas fa-cloud"></i></div>
          <div class="tech-name">Облачные решения</div>
          <div class="tech-desc">Гибкая и масштабируемая инфраструктура</div>
        </div>
        <div class="tech-item">
          <div class="tech-icon"><i class="fas fa-code"></i></div>
          <div class="tech-name">API интеграции</div>
          <div class="tech-desc">Легкая интеграция с существующими системами</div>
        </div>
      </div>
    </div>
  </section>

  <!-- Footer -->
  <footer>
    <div class="container">
      <div class="footer-content">
        <div class="footer-column">
          <div class="footer-about">
            <h4>RetailCore AI</h4>
            <p>Интеллектуальная платформа для современного ритейла. Повышайте эффективность, увеличивайте продажи и создавайте уникальный клиентский опыт.</p>
          </div>
        </div>
        <div class="footer-column">
          <h4>Навигация</h4>
          <ul class="footer-links">
            <li><a href="#about">О системе</a></li>
            <li><a href="#features">Функции</a></li>
            <li><a href="#technology">Технологии</a></li>
            <li><a href="#" id="footerDetailsLink">Подробнее</a></li>
          </ul>
        </div>
      </div>
      <div class="copyright">
        © 2023 RetailCore AI. Все права защищены.
      </div>
    </div>
  </footer>
</div>

<!-- Страница "Подробнее" (скрыта по умолчанию) -->
<div id="details-page" class="details-page" style="display: none;">
  <header>
    <div class="container header-container">
      <a href="#" class="logo" id="detailsLogo">
        <i class="fas fa-brain logo-icon"></i>
        <span>RetailCore AI</span>
      </a>
      <div class="menu-toggle" id="detailsMenuToggle">
        <i class="fas fa-bars"></i>
      </div>
      <nav>
        <ul id="detailsNavMenu">
          <span class="close-menu" id="detailsCloseMenu"><i class="fas fa-times"></i></span>
          <li><a href="#about">О системе</a></li>
          <li><a href="#features">Функции</a></li>
          <li><a href="#technology">Технологии</a></li>
          <li><a href="#" id="backToMain">На главную</a></li>
        </ul>
      </nav>
    </div>
  </header>

  <div class="details-container">
    <div class="details-header">
      <h1 class="details-title">Подробнее о RetailCore AI</h1>
      <p class="details-subtitle">Инновационная платформа искусственного интеллекта, разработанная специально для ритейла, чтобы трансформировать ваш бизнес</p>
    </div>

    <div class="details-content">
      <div class="details-section">
        <h3>О платформе</h3>
        <p>RetailCore AI — это комплексное решение, объединяющее передовые технологии искусственного интеллекта с глубоким пониманием потребностей ритейла. Наша платформа помогает компаниям повысить эффективность работы, увеличить продажи и создать уникальный клиентский опыт.</p>
        <p>Система разработана с учетом всех аспектов работы в ритейле: от управления ассортиментом до персонализированных коммуникаций с клиентами. Мы используем многоагентную архитектуру, что позволяет системе адаптироваться к специфике каждого бизнеса.</p>
       
        <div class="details-features">
          <div class="details-feature">
            <i class="fas fa-rocket"></i>
            <div>
              <h4>Высокая эффективность</h4>
              <p>Повышение производительности сотрудников на 30-50% за счет автоматизации рутинных задач</p>
            </div>
          </div>
          <div class="details-feature">
            <i class="fas fa-shield-alt"></i>
            <div>
              <h4>Безопасность данных</h4>
              <p>Сертифицированные решения для защиты данных клиентов и бизнес-процессов</p>
            </div>
          </div>
          <div class="details-feature">
            <i class="fas fa-expand-arrows-alt"></i>
            <div>
              <h4>Масштабируемость</h4>
              <p>Гибкая архитектура позволяет адаптировать систему под бизнес любого масштаба</p>
            </div>
          </div>
          <div class="details-feature">
            <i class="fas fa-lightbulb"></i>
            <div>
              <h4>Инновации</h4>
              <p>Постоянное обновление функционала с учетом последних тенденций в ритейле и ИИ</p>
            </div>
          </div>
        </div>
      </div>

      <div class="details-section">
        <h3>Ключевые преимущества</h3>
        <p>RetailCore AI предлагает уникальные преимущества, которые выделяют нашу платформу среди других решений:</p>
       
        <div class="details-features">
          <div class="details-feature">
            <i class="fas fa-chart-line"></i>
            <div>
              <h4>Увеличение продаж</h4>
              <p>Персонализированные рекомендации и автоматизированные кампании увеличивают средний чек и частоту покупок</p>
            </div>
          </div>
          <div class="details-feature">
            <i class="fas fa-clock"></i>
            <div>
              <h4>Экономия времени</h4>
              <p>Автоматизация рутинных процессов освобождает до 40% рабочего времени сотрудников</p>
            </div>
          </div>
          <div class="details-feature">
            <i class="fas fa-users"></i>
            <div>
              <h4>Улучшение клиентского опыта</h4>
              <p>Индивидуальный подход к каждому клиенту повышает лояльность и удовлетворенность</p>
            </div>
          </div>
          <div class="details-feature">
            <i class="fas fa-brain"></i>
            <div>
              <h4>Интеллектуальная аналитика</h4>
              <p>Глубокий анализ данных помогает принимать обоснованные бизнес-решения</p>
            </div>
          </div>
        </div>
      </div>

      <div class="details-section">
        <h3>Технические особенности</h3>
        <p>RetailCore AI построена на передовых технологиях, обеспечивающих высокую производительность, надежность и безопасность:</p>
       
        <div class="details-features">
          <div class="details-feature">
            <i class="fas fa-network-wired"></i>
            <div>
              <h4>Многоагентная архитектура</h4>
              <p>Система специализированных ИИ-агентов, каждый из которых отвечает за определенную задачу</p>
            </div>
          </div>
          <div class="details-feature">
            <i class="fas fa-cloud"></i>
            <div>
              <h4>Облачная инфраструктура</h4>
              <p>Гибкое масштабирование ресурсов в зависимости от нагрузки и потребностей бизнеса</p>
            </div>
          </div>
          <div class="details-feature">
            <i class="fas fa-lock"></i>
            <div>
              <h4>Шифрование данных</h4>
              <p>Все данные передаются и хранятся в зашифрованном виде с использованием современных алгоритмов</p>
            </div>
          </div>
          <div class="details-feature">
            <i class="fas fa-plug"></i>
            <div>
              <h4>API интеграция</h4>
              <p>Легкая интеграция с существующими CRM, ERP и другими бизнес-системами</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <footer>
    <div class="container">
      <div class="footer-content">
        <div class="footer-column">
          <div class="footer-about">
            <h4>RetailCore AI</h4>
            <p>Интеллектуальная платформа для современного ритейла. Повышайте эффективность, увеличивайте продажи и создавайте уникальный клиентский опыт.</p>
          </div>
        </div>
        <div class="footer-column">
          <h4>Навигация</h4>
          <ul class="footer-links">
            <li><a href="#about">О системе</a></li>
            <li><a href="#features">Функции</a></li>
            <li><a href="#technology">Технологии</a></li>
            <li><a href="#" id="detailsFooterBack">На главную</a></li>
          </ul>
        </div>
      </div>
      <div class="copyright">
        © 2023 RetailCore AI. Все права защищены.
      </div>
    </div>
  </footer>
</div>

<script>
// Preloader Script
document.addEventListener('DOMContentLoaded', function() {
  const preloader = document.getElementById('preloader');
  const progressBar = document.querySelector('.progress-bar');
  const statusText = document.querySelector('.preloader-status');
 
  let progress = 0;
  const interval = setInterval(() => {
    progress += Math.random() * 10;
    if (progress > 100) progress = 100;
    progressBar.style.width = progress + '%';
   
    // Update status text based on progress
    if (progress < 30) {
      statusText.textContent = 'Инициализация ядра...';
    } else if (progress < 60) {
      statusText.textContent = 'Загрузка модулей...';
    } else if (progress < 90) {
      statusText.textContent = 'Оптимизация алгоритмов...';
    } else {
      statusText.textContent = 'Готово! Запуск системы...';
    }
   
    if (progress >= 100) {
      clearInterval(interval);
      setTimeout(() => {
        document.body.classList.add('loaded');
        setTimeout(() => {
          preloader.style.display = 'none';
        }, 500);
      }, 500);
    }
  }, 200);
});

// Smooth scrolling
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
  anchor.addEventListener('click', function (e) {
    e.preventDefault();
    const target = document.querySelector(this.getAttribute('href'));
    if (target) {
      target.scrollIntoView({ behavior: 'smooth' });
      navMenu.classList.remove('active');
      detailsNavMenu.classList.remove('active');
      document.body.style.overflow = '';
    }
  });
});

// Mobile menu toggle
const menuToggle = document.getElementById('menuToggle');
const navMenu = document.getElementById('navMenu');
const closeMenu = document.getElementById('closeMenu');

menuToggle.addEventListener('click', () => {
  navMenu.classList.add('active');
  document.body.style.overflow = 'hidden';
});

closeMenu.addEventListener('click', () => {
  navMenu.classList.remove('active');
  document.body.style.overflow = '';
});

// Mobile menu toggle for details page
const detailsMenuToggle = document.getElementById('detailsMenuToggle');
const detailsNavMenu = document.getElementById('detailsNavMenu');
const detailsCloseMenu = document.getElementById('detailsCloseMenu');

detailsMenuToggle.addEventListener('click', () => {
  detailsNavMenu.classList.add('active');
  document.body.style.overflow = 'hidden';
});

detailsCloseMenu.addEventListener('click', () => {
  detailsNavMenu.classList.remove('active');
  document.body.style.overflow = '';
});

// Close menu when clicking outside
document.addEventListener('click', (e) => {
  const isClickInsideMenu = navMenu.contains(e.target) || menuToggle.contains(e.target);
  if (!isClickInsideMenu && navMenu.classList.contains('active')) {
    navMenu.classList.remove('active');
    document.body.style.overflow = '';
  }
 
  const isClickInsideDetailsMenu = detailsNavMenu.contains(e.target) || detailsMenuToggle.contains(e.target);
  if (!isClickInsideDetailsMenu && detailsNavMenu.classList.contains('active')) {
    detailsNavMenu.classList.remove('active');
    document.body.style.overflow = '';
  }
});

// Close menu on escape
document.addEventListener('keydown', (e) => {
  if (e.key === 'Escape' && navMenu.classList.contains('active')) {
    navMenu.classList.remove('active');
    document.body.style.overflow = '';
  }
  if (e.key === 'Escape' && detailsNavMenu.classList.contains('active')) {
    detailsNavMenu.classList.remove('active');
    document.body.style.overflow = '';
  }
});

// Chat Animation Script
const chatMessages = document.getElementById('chat-messages');
const chatAnimation = document.getElementById('chatAnimation');

// Заранее записанный диалог
const dialogScript = [
  { type: 'ai', text: 'Привет! Я ваш ИИ-ассистент. Как я могу вам помочь сегодня?', delay: 2000 },
  { type: 'user', text: 'Привет! Какие задачи на сегодня?', delay: 2500 },
  { type: 'ai', text: 'Сегодня Вам необходимо прокоммуницировать с клиентами Елена и Тимур в 19:00. С ними давно не было коммуникаций - пригласите их в бутик!', delay: 2000 },
  { type: 'user', text: 'Какой прогноз на сегодня?', delay: 1500 },
  { type: 'ai', text: 'Базовый: 250 тыс. руб. (+9% к 02.08.2024), Оптимистичный: 275 тыс. руб. (+20%), Пессимистичный: 225 тыс. руб. (-10%)', delay: 2500 },
  { type: 'user', text: 'Спасибо! И подскажи, что предложить клиентам к грилю G802?', delay: 1500 },
  { type: 'ai', text: 'К грилю G802 предложите новый набор стейковых ножей HN573, а также ножеточку HN529, подсказать еще варианты?', delay: 3000 },
  { type: 'user', text: 'Пока хватит, спасибо за информацию!', delay: 1500 },
  { type: 'ai', text: 'Всегда рад помочь! Обращайтесь, если будут ещё вопросы. Отличных продаж!', delay: 2000 }
];

let isPlaying = false;
let currentStep = 0;

function initChatAnimation() {
  const isMobile = window.matchMedia("(max-width: 768px)").matches;

  if (isMobile) {
    chatAnimation.style.position = 'fixed';
    chatAnimation.style.bottom = '80px';
    chatAnimation.style.right = '20px';
    chatAnimation.style.width = 'calc(100% - 40px)';
    chatAnimation.style.height = '55vh';
    chatAnimation.style.maxHeight = 'none';
    chatAnimation.style.transform = 'translateY(100px)';
    chatAnimation.style.animation = 'mobileChatAppear 0.5s ease-in-out 3s forwards';
  }

  // Настройка контейнера сообщений
  chatMessages.style.height = '400px';
  chatMessages.style.overflowY = 'hidden';

  // Старт анимации через 3 секунды
  setTimeout(() => {
    chatAnimation.classList.add('show');
    startChatAnimation();
  }, 3000);
}

function startChatAnimation() {
  if (isPlaying) return;
  isPlaying = true;
  playNextStep();
}

let hasScrolledToAbout = false; // Флаг для отслеживания прокрутки

function playNextStep() {
  if (currentStep >= dialogScript.length) {
    isPlaying = false;
    return;
  }

  const step = dialogScript[currentStep];

  if (step.type === 'ai') {
    showTypingIndicator();

    setTimeout(() => {
      hideTypingIndicator();
      addAIMessage(step.text);
      currentStep++;
      setTimeout(() => {
        scrollToBottom();
        setTimeout(playNextStep, 500);
      }, 50);
    }, step.delay);
  } else {
    setTimeout(() => {
      addUserMessage(step.text);
      currentStep++;
      setTimeout(() => {
        scrollToBottom();
        setTimeout(playNextStep, 500);
      }, 50);
    }, step.delay);
  }
}
function addUserMessage(text) {
  const messageDiv = document.createElement('div');
  messageDiv.className = 'message user-message';
  messageDiv.innerHTML = `${text}<div class="timestamp">${getCurrentTime()}</div>`;
  chatMessages.appendChild(messageDiv);
}

function addAIMessage(text) {
  const messageDiv = document.createElement('div');
  messageDiv.className = 'message ai-message';
  messageDiv.innerHTML = `${text}<div class="timestamp">${getCurrentTime()}</div>`;
  chatMessages.appendChild(messageDiv);
}

function showTypingIndicator() {
  const typingDiv = document.createElement('div');
  typingDiv.className = 'typing-indicator';
  typingDiv.id = 'typing-indicator';
  typingDiv.innerHTML = `
    <div class="typing-dot"></div>
    <div class="typing-dot"></div>
    <div class="typing-dot"></div>
  `;
  chatMessages.appendChild(typingDiv);
  scrollToBottom();
}

function hideTypingIndicator() {
  const typingIndicator = document.getElementById('typing-indicator');
  if (typingIndicator) typingIndicator.remove();
}

function scrollToBottom() {
  chatMessages.scrollTo({
    top: chatMessages.scrollHeight,
    behavior: 'smooth'
  });
}

function getCurrentTime() {
  const now = new Date();
  return now.getHours().toString().padStart(2, '0') + ':' +
         now.getMinutes().toString().padStart(2, '0');
}

// Intersection Observer for animations
const observerOptions = {
  threshold: 0.1,
  rootMargin: '0px 0px -50px 0px'
};

const observer = new IntersectionObserver((entries) => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      if (entry.target.classList.contains('hero-content')) {
        // Анимация только для hero-блока
        entry.target.querySelectorAll('.hero-text-animated').forEach(el => {
          el.classList.add('animated');
          setTimeout(() => {
            el.classList.add('shift-left');
            chatAnimation.classList.add('show');
            startChatAnimation();
          }, 3000);
        });
      } else {
        // Для всех остальных элементов (плиток)
        entry.target.style.animationPlayState = 'running';
      }
    }
  });
}, observerOptions);

document.querySelectorAll('.about-item, .feature-card, .tech-item, .hero-content').forEach(el => {
  el.style.animationPlayState = 'paused';
  observer.observe(el);
});

// Настройка карточек фич для мобильных устройств
function setupFeatureCards() {
  const featureCards = document.querySelectorAll('.feature-card');
  const isMobile = window.matchMedia("(max-width: 768px)").matches;

  featureCards.forEach(card => {
    if (isMobile) {
      // Для мобильных - оставляем обработку кликов
      card.addEventListener('click', () => {
        const isActive = card.classList.contains('active');
        featureCards.forEach(otherCard => {
          otherCard.classList.remove('active');
        });
        if (!isActive) {
          card.classList.add('active');
        }
      });
    } else {
      // Для десктопа - убираем все обработчики кликов
      card.removeEventListener('click', () => {});
    }
  });
}

// Вызовите функцию при загрузке и при изменении размера окна
window.addEventListener('load', setupFeatureCards);
window.addEventListener('resize', setupFeatureCards);

// Переключение между главной страницей и страницей "Подробнее"
const detailsLink = document.getElementById('detailsLink');
const footerDetailsLink = document.getElementById('footerDetailsLink');
const backToMain = document.getElementById('backToMain');
const detailsFooterBack = document.getElementById('detailsFooterBack');
const mainPage = document.getElementById('main-page');
const detailsPage = document.getElementById('details-page');
const detailsLogo = document.getElementById('detailsLogo');

function showDetailsPage() {
  mainPage.style.display = 'none';
  detailsPage.style.display = 'block';
  window.scrollTo(0, 0);

  // Анимация появления секций
  setTimeout(() => {
    const sections = document.querySelectorAll('.details-section');
    sections.forEach((section, index) => {
      setTimeout(() => {
        section.classList.add('visible');
       
        // Анимация появления фич внутри секции
        const features = section.querySelectorAll('.details-feature');
        features.forEach((feature, featureIndex) => {
          setTimeout(() => {
            feature.classList.add('visible');
          }, featureIndex * 100); // Задержка между появлением фич
        });
      }, index * 200); // Задержка между появлением секций
    });
  }, 50); // Небольшая задержка для гарантии корректного отображения
}

function showMainPage() {
  detailsPage.style.display = 'none';
  mainPage.style.display = 'block';
  window.scrollTo(0, 0);

     document.querySelectorAll('.details-section, .details-feature').forEach(el => {
    el.classList.remove('visible');
  });
}


detailsLink.addEventListener('click', function(e) {
  e.preventDefault();
  showDetailsPage();
});

footerDetailsLink.addEventListener('click', function(e) {
  e.preventDefault();
  showDetailsPage();
});

backToMain.addEventListener('click', function(e) {
  e.preventDefault();
  showMainPage();
});

detailsFooterBack.addEventListener('click', function(e) {
  e.preventDefault();
  showMainPage();
});

detailsLogo.addEventListener('click', function(e) {
  e.preventDefault();
  showMainPage();
});

// Анимация нейронной сети (исходная)
document.addEventListener('DOMContentLoaded', function() {
  const canvas = document.getElementById('neuralNetwork');
  const ctx = canvas.getContext('2d');

  const settings = {
    neuronCount: 100,
    pulseSpeed: 2,
    minPulseInterval: 1200,
    maxPulseInterval: 6000,
    connectionDistance: 300,
    neuronSize: 1.5,
    pulseLineWidth: 0.5,
    colors: {
      neuron: 'rgba(99, 102, 241, 0.3)',
      pulse: 'rgba(99, 102, 241, 0.7)',
      pulseFade: 'rgba(99, 102, 241, 0)'
    }
  };

  class Neuron {
    constructor(x, y) {
      this.x = x;
      this.y = y;
      this.connections = [];
      this.pulses = [];
      this.nextPulseTime = Math.random() * (settings.maxPulseInterval - settings.minPulseInterval) + settings.minPulseInterval;
    }

    addConnection(neuron) {
      this.connections.push(neuron);
    }

    firePulse() {
      if (this.connections.length > 0) {
        const target = this.connections[Math.floor(Math.random() * this.connections.length)];
        this.pulses.push({
          target,
          progress: 0
        });
        this.nextPulseTime = Math.random() * (settings.maxPulseInterval - settings.minPulseInterval) + settings.minPulseInterval;
      }
    }

    update(time) {
      if (time >= this.nextPulseTime) {
        this.firePulse();
        this.nextPulseTime += time;
      }
      for (let i = this.pulses.length - 1; i >= 0; i--) {
        const pulse = this.pulses[i];
        pulse.progress += 0.01 * settings.pulseSpeed;
        if (pulse.progress >= 1) {
          this.pulses.splice(i, 1);
        }
      }
    }

    draw() {
      ctx.fillStyle = settings.colors.neuron;
      ctx.beginPath();
      ctx.arc(this.x, this.y, settings.neuronSize, 0, Math.PI * 2);
      ctx.fill();

      for (const pulse of this.pulses) {
        const x1 = this.x;
        const y1 = this.y;
        const x2 = this.x + (pulse.target.x - this.x) * pulse.progress;
        const y2 = this.y + (pulse.target.y - this.y) * pulse.progress;

        const gradient = ctx.createLinearGradient(x1, y1, x2, y2);
        gradient.addColorStop(0, settings.colors.pulseFade);
        gradient.addColorStop(0.5, settings.colors.pulse);
        gradient.addColorStop(1, settings.colors.pulseFade);

        ctx.strokeStyle = gradient;
        ctx.lineWidth = settings.pulseLineWidth;
        ctx.beginPath();
        ctx.moveTo(x1, y1);
        ctx.lineTo(x2, y2);
        ctx.stroke();
      }
    }
  }

  let neurons = [];

  function initNeuralNetwork() {
    canvas.width = canvas.offsetWidth * window.devicePixelRatio;
    canvas.height = canvas.offsetHeight * window.devicePixelRatio;
    ctx.scale(window.devicePixelRatio, window.devicePixelRatio);

    neurons = [];
    for (let i = 0; i < settings.neuronCount; i++) {
      const x = Math.random() * canvas.width / window.devicePixelRatio;
      const y = Math.random() * canvas.height / window.devicePixelRatio;
      neurons.push(new Neuron(x, y));
    }

    for (let i = 0; i < neurons.length; i++) {
      for (let j = i + 1; j < neurons.length; j++) {
        const dx = neurons[i].x - neurons[j].x;
        const dy = neurons[i].y - neurons[j].y;
        const distance = Math.sqrt(dx * dx + dy * dy);
        if (distance < settings.connectionDistance) {
          neurons[i].addConnection(neurons[j]);
          neurons[j].addConnection(neurons[i]);
        }
      }
    }
  }

  function animate(time) {
    ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    for (const neuron of neurons) {
      neuron.update(time);
      neuron.draw();
    }

    requestAnimationFrame(animate);
  }

  canvas.addEventListener('mousemove', (e) => {
    const rect = canvas.getBoundingClientRect();
    const mouseX = (e.clientX - rect.left) / window.devicePixelRatio;
    const mouseY = (e.clientY - rect.top) / window.devicePixelRatio;

    for (const neuron of neurons) {
      const dx = neuron.x - mouseX;
      const dy = neuron.y - mouseY;
      const distance = Math.sqrt(dx * dx + dy * dy);
      if (distance < 80 && Math.random() < 0.02) {
        neuron.firePulse();
      }
    }
  });

  function startAnimation() {
    initNeuralNetwork();
    requestAnimationFrame(animate);
  }

  let resizeTimeout;
  function handleResize() {
    clearTimeout(resizeTimeout);
    resizeTimeout = setTimeout(() => {
      initNeuralNetwork();
      requestAnimationFrame(animate);
    }, 100);
  }

  startAnimation();
  window.addEventListener('resize', handleResize);
 
  // Инициализация чата после загрузки страницы
  initChatAnimation();
});
</script>
</body>
</html>
